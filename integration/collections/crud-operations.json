{
    "info": {
      "name": "CRUD Operations for Content Types and Content",
      "description": "Test CRUD operations for content types and content items.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
    {
        "name": "Login to Retrieve JWT",
        "request": {
            "method": "POST",
            "header": [
            {
                "key": "Content-Type",
                "value": "application/json"
            }
            ],
            "url": {
            "raw": "http://localhost:8080/auth/login",
            "host": ["localhost"],
            "port": "8080",
            "path": ["auth", "login"]
            },
            "body": {
            "mode": "raw",
            "raw": "{\"username\": \"testuser\", \"password\": \"password123\"}"
            }
        },
        "event": [
            {
            "listen": "test",
            "script": {
                "exec": [
                "pm.test(\"Login successful and token received\", function () {",
                "    pm.response.to.have.status(200);",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.token).to.be.a(\"string\");",
                "    pm.environment.set(\"jwt_token\", jsonData.token);",
                "});"
                ],
                "type": "text/javascript"
            }
            }
        ],
        "response": []
    },
    {
        "name": "Create Content Type",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{jwt_token}}"
            }
          ],
          "url": {
            "raw": "{{base_url}}/content-types",
            "host": ["{{base_url}}"],
            "path": ["content-types"]
          },
          "body": {
            "mode": "raw",
            "raw": "{\"name\": \"articles\", \"fields\": [{\"name\": \"title\", \"type\": \"string\", \"required\": true}, {\"name\": \"content\", \"type\": \"richtext\", \"required\": true}]}"
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"Content type created successfully\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.message).to.eql(\"Content type created successfully\");",
                "});"
              ]
            }
          }
        ]
      },
      {
        "name": "Read Content Type - Articles",
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{jwt_token}}"
            }
          ],
          "url": {
            "raw": "{{base_url}}/content-types/articles",
            "host": ["{{base_url}}"],
            "path": ["content-types", "articles"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Content type retrieved successfully\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.name).to.eql(\"articles\");",
                "});"
              ]
            }
          }
        ]
      },
      {
        "name": "Create Content Item",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{jwt_token}}"
            }
          ],
          "url": {
            "raw": "{{base_url}}/articles",
            "host": ["{{base_url}}"],
            "path": ["articles"]
          },
          "body": {
            "mode": "raw",
            "raw": "{\"title\": \"My First Article\", \"content\": \"This is the content of the article.\"}"
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                ""
              ]
            }
          }
        ]
      },
      {
        "name": "Get Content Items",
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{jwt_token}}"
            }
          ],
          "url": {
            "raw": "{{base_url}}/articles",
            "host": ["{{base_url}}"],
            "path": ["articles"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Content items retrieved successfully\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.be.an(\"array\");",
                "});"
              ]
            }
          }
        ]
      },
      {
        "name": "Update Content Item",
        "request": {
          "method": "PUT",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{jwt_token}}"
            }
          ],
          "url": {
            "raw": "{{base_url}}/articles/1",
            "host": ["{{base_url}}"],
            "path": ["article", "64"]
          },
          "body": {
            "mode": "raw",
            "raw": "{\"title\": \"Updated Title\", \"content\": \"Updated content of the article.\"}"
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Content item updated successfully\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.message).to.eql(\"Content item updated\");",
                "});"
              ]
            }
          }
        ]
      },
      {
        "name": "Delete Content Type - Articles",
        "request": {
          "method": "DELETE",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{jwt_token}}"
            }
          ],
          "url": {
            "raw": "{{base_url}}/content-types/articles",
            "host": ["{{base_url}}"],
            "path": ["content-types", "articles"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Content type deleted successfully\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.message).to.eql(\"Content type deleted successfully\");",
                "});"
              ]
            }
          }
        ]
      }
    ]
  }
  